/*
 * generated by Xtext 2.10.0
 */
package org.example.domainmodel.tests

import com.google.inject.Inject
import org.eclipse.xtext.junit4.InjectWith
import org.eclipse.xtext.junit4.XtextRunner
import org.eclipse.xtext.junit4.util.ParseHelper
import org.eclipse.xtext.junit4.validation.ValidationTestHelper
import org.example.domainmodel.domainmodel.Domainmodel
import org.example.domainmodel.domainmodel.DomainmodelPackage
import org.example.domainmodel.domainmodel.Entity
import org.example.domainmodel.validation.DomainmodelValidator
import org.junit.Test
import org.junit.runner.RunWith

import static org.junit.Assert.*

@RunWith(XtextRunner)
@InjectWith(DomainmodelInjectorProvider)
class DomainmodelParsingTest {

	@Inject ParseHelper<Domainmodel> parseHelper
	@Inject ValidationTestHelper validationHelper

	@Test
	def void parseDomainmodel() {
		val model = parseHelper.parse("
			entity MyEntity {
                parent: MyEntity
            }")
		val entity = model.elements.head as Entity
		assertSame(entity, entity.features.head.type)
	}

	@Test
	def void entityNotStartedWithCapitolWarning() {
		val model = parseHelper.parse('''
			entity noCapitol {
				parent: noCapitol
			}''')
		validationHelper.assertWarning(model, DomainmodelPackage.Literals.ENTITY,
			DomainmodelValidator.ENITY_NAME_STARTS_WITH_CAPITOL)
	}

}
